[{"C:\\Users\\jimi\\work\\wolf\\src\\index.js":"1","C:\\Users\\jimi\\work\\wolf\\src\\App.js":"2","C:\\Users\\jimi\\work\\wolf\\src\\components\\TopBar.js":"3","C:\\Users\\jimi\\work\\wolf\\src\\page\\Home.js":"4","C:\\Users\\jimi\\work\\wolf\\src\\components\\Player.js":"5"},{"size":160,"mtime":1612189388671,"results":"6","hashOfConfig":"7"},{"size":922,"mtime":1612189388667,"results":"8","hashOfConfig":"7"},{"size":1361,"mtime":1612189388670,"results":"9","hashOfConfig":"7"},{"size":819,"mtime":1612189388672,"results":"10","hashOfConfig":"7"},{"size":4928,"mtime":1612400519407,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1snq9co",{"filePath":"15","messages":"16","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\jimi\\work\\wolf\\src\\index.js",[],["26","27"],"C:\\Users\\jimi\\work\\wolf\\src\\App.js",["28","29","30","31","32","33","34","35","36"],"import react, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Box, Button, ChakraProvider, Container, Flex, HStack } from \"@chakra-ui/react\"\r\nimport TopBar from './components/TopBar';\r\nimport Player from './components/Player';\r\nimport Home from './page/Home'\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div style={{ height: '90vh', margin: 0, padding: 0 }} >\r\n      <ChakraProvider>\r\n        <Container maxW={{ md: \"75%\" }}>\r\n          <Router>\r\n            <TopBar ></TopBar>\r\n            <Switch>\r\n              <Route path=\"/res/:filename\">\r\n                <Player />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </Container>\r\n      </ChakraProvider>\r\n    </div >\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\jimi\\work\\wolf\\src\\components\\TopBar.js",["37","38"],"import React from 'react'\r\nimport { Avatar, Box, Flex, HStack, Link } from \"@chakra-ui/react\"\r\nimport { Link as ReactLink } from \"react-router-dom\";\r\n\r\nconst Links = [\r\n  {\r\n    name: \"Dashboard\",\r\n    link: \"/\"\r\n  }\r\n];\r\n\r\nconst NavLink = ({ children }) => {\r\n  return (\r\n    <Link\r\n      px={2}\r\n      py={1}\r\n      rounded={'md'}\r\n      _hover={{ textDecoration: 'none', bg: 'gray.400' }}\r\n\r\n      href={children.link}>\r\n      {children.name}\r\n    </Link>\r\n  )\r\n}\r\n\r\nfunction TopBar() {\r\n\r\n  return (\r\n    <>\r\n      <Box bg={'gray.300'} px={4} >\r\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\r\n          <HStack\r\n            as={'nav'}\r\n            spacing={4}\r\n          >\r\n            <Link as={ReactLink} to=\"/\">\r\n              <Avatar\r\n                size={'md'}\r\n                bg={'gray.100'}\r\n                _hover={{ bg: 'gray.400' }}\r\n                src={\r\n                  '/resource/img/logo.png'\r\n                }\r\n              /></Link>\r\n            {/* {Links.map((link) => (\r\n              <NavLink key={link.name} display={{ base: 'none', md: 'flex' }}>{link}</NavLink>\r\n            )\r\n            )} */}\r\n          </HStack>\r\n          <Flex alignItems={'center'}>\r\n            <h3>Listen What You Want</h3>\r\n          </Flex>\r\n        </Flex>\r\n\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","C:\\Users\\jimi\\work\\wolf\\src\\page\\Home.js",[],"C:\\Users\\jimi\\work\\wolf\\src\\components\\Player.js",["39","40","41","42"],"\r\nimport { useState, useRef, useEffect, useMemo, useImperativeHandle } from \"react\";\r\n\r\nimport ReactPlyr from '@m2g/react-plyr';\r\nimport '@m2g/react-plyr/build/react-plyr.css'\r\nimport { Button, HStack, Text, Box, IconButton, Switch } from \"@chakra-ui/react\";\r\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Player = ({ handleTime, newTime }) => {\r\n\r\n  const filename = useParams().filename\r\n\r\n  const plyr = useRef()\r\n  const [subtitle, setSubtitle] = useState([])\r\n  const [nowTime, setNowTime] = useState(0)\r\n  // 当前字幕\r\n  const [now, setNow] = useState(\"\")\r\n  //上一个字幕\r\n  const [last, setLast] = useState(\"\")\r\n  //下一个字幕\r\n  const [next, setNext] = useState(\"\")\r\n\r\n  const [marked, setMarked] = useLocalStorage(filename, [])\r\n\r\n  // const [name, setName] = useLocalStorage('name', 'Bob');\r\n\r\n  const [isSubtitle, setIsSubtitle] = useState(true)\r\n\r\n  // const readyCurrentTime = () => {\r\n  //   plyr.current.setCurrentTime(newTime)\r\n  //   console.log(plyr);\r\n  // }\r\n\r\n  // 当播放器时间变动时\r\n  const timeUpdate = (currentTime) => {\r\n    setNowTime(currentTime)\r\n  }\r\n\r\n  // 加载字幕\r\n  useEffect(() => {\r\n    axios.get(`https://cdn.jsdelivr.net/gh/orangiest/wolf/m4a/cet4/sub/${filename}.json`)\r\n      .then(\r\n        res => {\r\n          setSubtitle(res.data)\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  // 计算当前相关字幕\r\n  useEffect(() => {\r\n    let now = subtitle.filter(sub => nowTime >= sub.StartTime && nowTime < sub.EndTime)\r\n    let last = subtitle.filter(sub => nowTime > sub.EndTime)\r\n    let next = subtitle.filter(sub => nowTime <= sub.StartTime)\r\n\r\n    if (now[0] !== undefined) {\r\n      setNow(now[0])\r\n    }\r\n\r\n    if (last[last.length - 1] !== undefined) {\r\n      setLast(last[last.length - 1])\r\n    }\r\n\r\n    if (next[1] !== undefined) {\r\n      setNext(next[1])\r\n    }\r\n\r\n  }, [nowTime])\r\n\r\n  // 销毁对象 有和没有好像都没差\r\n  useEffect(() => {\r\n    return () => {\r\n      plyr.current = null\r\n    }\r\n  }, [])\r\n\r\n  const reactPlayer = useMemo(() => (\r\n    <ReactPlyr\r\n      type=\"audio\"\r\n      sources={[\r\n        {\r\n          src: `https://minio.cwm.wiki/eng/cet4/${filename}.m4a`\r\n        }\r\n      ]}\r\n      debug={false}\r\n      settings={[]}\r\n      // autoplay={true}\r\n      ref={plyr}\r\n      onTimeUpdate={timeUpdate}\r\n    />\r\n  ), [])\r\n\r\n  return (\r\n    <div>\r\n      {reactPlayer}\r\n      <HStack px={2}>\r\n        <Button onClick={() => {\r\n          plyr.current.setCurrentTime(last.StartTime)\r\n        }}>Last</Button>\r\n        <Button onClick={() => {\r\n          plyr.current.setCurrentTime(next.StartTime)\r\n        }}>Next</Button>\r\n        <Button onClick={() => {\r\n          setMarked([...marked, now])\r\n        }}>Mark It</Button>\r\n        <label>字幕状态</label><Switch size=\"lg\" defaultChecked={true} onChange={(event) => {\r\n          setIsSubtitle(event.target.checked)\r\n        }} />\r\n      </HStack>\r\n      {\r\n        isSubtitle && <Box textShadow=\"1px 1px #90c9f2\" my={2} px={2} borderRadius=\"md\">\r\n          {\r\n            now && <Text>{now.Value}</Text>\r\n          }\r\n        </Box>\r\n      }\r\n      {\r\n        marked.length > 0 && marked.map((mark, index) => (\r\n          <Box key={index} my={2} px={3} py={1} bg={'gray.100'} borderRadius=\"md\" boxShadow=\"base\">\r\n            <HStack>\r\n              <IconButton icon={<ChevronRightIcon></ChevronRightIcon>} onClick={() => {\r\n                plyr.current.setCurrentTime(mark.StartTime)\r\n              }} />\r\n              <Text>{mark.Value}</Text>\r\n            </HStack>\r\n          </Box>\r\n\r\n\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default Player",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"47","severity":1,"message":"51","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"52","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"53","line":1,"column":38,"nodeType":"49","messageId":"50","endLine":1,"endColumn":44},{"ruleId":"47","severity":1,"message":"54","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":13},{"ruleId":"47","severity":1,"message":"55","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},{"ruleId":"47","severity":1,"message":"56","line":4,"column":15,"nodeType":"49","messageId":"50","endLine":4,"endColumn":21},{"ruleId":"47","severity":1,"message":"57","line":4,"column":50,"nodeType":"49","messageId":"50","endLine":4,"endColumn":54},{"ruleId":"47","severity":1,"message":"58","line":4,"column":56,"nodeType":"49","messageId":"50","endLine":4,"endColumn":62},{"ruleId":"47","severity":1,"message":"59","line":5,"column":7,"nodeType":"49","messageId":"50","endLine":5,"endColumn":12},{"ruleId":"47","severity":1,"message":"60","line":12,"column":7,"nodeType":"49","messageId":"50","endLine":12,"endColumn":14},{"ruleId":"47","severity":1,"message":"61","line":2,"column":48,"nodeType":"49","messageId":"50","endLine":2,"endColumn":67},{"ruleId":"62","severity":1,"message":"63","line":49,"column":6,"nodeType":"64","endLine":49,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":69,"column":6,"nodeType":"64","endLine":69,"endColumn":15,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":92,"column":6,"nodeType":"64","endLine":92,"endColumn":8,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'axios' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Flex' is defined but never used.","'HStack' is defined but never used.","'Links' is assigned a value but never used.","'NavLink' is assigned a value but never used.","'useImperativeHandle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filename'. Either include it or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'subtitle'. Either include it or remove the dependency array.",["73"],"React Hook useMemo has a missing dependency: 'filename'. Either include it or remove the dependency array.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"75","fix":"79"},"Update the dependencies array to be: [filename]",{"range":"80","text":"81"},"Update the dependencies array to be: [nowTime, subtitle]",{"range":"82","text":"83"},{"range":"84","text":"81"},[1364,1366],"[filename]",[1856,1865],"[nowTime, subtitle]",[2301,2303]]