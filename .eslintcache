[{"/Users/jimi/Play/react/wolf/src/index.js":"1","/Users/jimi/Play/react/wolf/src/App.js":"2","/Users/jimi/Play/react/wolf/src/components/Player.js":"3","/Users/jimi/Play/react/wolf/src/components/Sub.js":"4","/Users/jimi/Play/react/wolf/src/components/TopBar.js":"5","/Users/jimi/Play/react/wolf/src/page/Home.js":"6"},{"size":152,"mtime":1612024755342,"results":"7","hashOfConfig":"8"},{"size":1150,"mtime":1612064968038,"results":"9","hashOfConfig":"8"},{"size":3461,"mtime":1612064747094,"results":"10","hashOfConfig":"8"},{"size":1622,"mtime":1611995687730,"results":"11","hashOfConfig":"12"},{"size":1305,"mtime":1612024755342,"results":"13","hashOfConfig":"8"},{"size":786,"mtime":1612024755343,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"8gsn50",{"filePath":"18","messages":"19","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"a4fmjz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/jimi/Play/react/wolf/src/index.js",[],["33","34"],"/Users/jimi/Play/react/wolf/src/App.js",["35","36","37","38","39","40","41","42","43"],"/Users/jimi/Play/react/wolf/src/components/Player.js",["44","45","46","47"],"\nimport { useState, useRef, useEffect, useMemo, useImperativeHandle } from \"react\";\n\nimport ReactPlyr from '@m2g/react-plyr';\nimport '@m2g/react-plyr/build/react-plyr.css'\nimport { Button, HStack, Text, Box, IconButton, Switch } from \"@chakra-ui/react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Player = ({ handleTime, newTime }) => {\n\n  const filename = useParams().filename\n\n  const plyr = useRef()\n  const [subtitle, setSubtitle] = useState([])\n  const [nowTime, setNowTime] = useState(0)\n  // 当前字幕\n  const [now, setNow] = useState(\"\")\n  //上一个字幕\n  const [last, setLast] = useState(\"\")\n  //下一个字幕\n  const [next, setNext] = useState(\"\")\n\n  const [marked, setMarked] = useState([])\n\n  const [isSubtitle, setIsSubtitle] = useState(true)\n\n  // const readyCurrentTime = () => {\n  //   plyr.current.setCurrentTime(newTime)\n  //   console.log(plyr);\n  // }\n\n  // 当播放器时间变动时\n  const timeUpdate = (currentTime) => {\n    setNowTime(currentTime)\n  }\n\n  useEffect(() => {\n\n    axios.get(`https://cdn.jsdelivr.net/gh/orangiest/wolf/m4a/cet4/sub/${filename}.json`)\n      .then(\n        res => {\n          setSubtitle(res.data)\n          // console.log(sub)\n        }\n      )\n    // setNow(subtitle[0])\n  }, [])\n\n  useEffect(() => {\n    let now = subtitle.filter(sub => nowTime >= sub.StartTime && nowTime < sub.EndTime)\n    let last = subtitle.filter(sub => nowTime > sub.EndTime)\n    let next = subtitle.filter(sub => nowTime <= sub.StartTime)\n\n    if (now[0] !== undefined) {\n      setNow(now[0])\n    }\n\n    if (last[last.length - 1] !== undefined) {\n      setLast(last[last.length - 1])\n    }\n\n    if (next[1] !== undefined) {\n      setNext(next[1])\n    }\n\n  }, [nowTime])\n\n  useEffect(() => {\n    return () => {\n      plyr.current = null\n    }\n  }, [])\n\n\n\n  const reactPlayer = useMemo(() => (\n    <ReactPlyr\n      type=\"audio\"\n      sources={[\n        {\n          src: `https://cdn.jsdelivr.net/gh/orangiest/wolf/m4a/cet4/${filename}.m4a`\n        }\n      ]}\n      debug={false}\n      settings={[]}\n      // autoplay={true}\n      ref={plyr}\n      onTimeUpdate={timeUpdate}\n    />\n  ), [])\n\n  return (\n    <div>\n      {reactPlayer}\n      <HStack px={2}>\n        <Button onClick={() => {\n          plyr.current.setCurrentTime(last.StartTime)\n        }}>Last</Button>\n        <Button onClick={() => {\n          plyr.current.setCurrentTime(next.StartTime)\n        }}>Next</Button>\n        <Button onClick={() => {\n          setMarked([...marked, now])\n        }}>Mark It</Button>\n        <label>字幕状态</label><Switch size=\"lg\" defaultChecked={true} onChange={(event) => {\n          setIsSubtitle(event.target.checked)\n        }} />\n      </HStack>\n      {\n        isSubtitle && <Box textShadow=\"1px 1px #90c9f2\" my={2} px={2} borderRadius=\"md\">\n          {\n            now && <Text>{now.Value}</Text>\n          }\n        </Box>\n      }\n      {\n        marked.length > 0 && marked.map((mark, index) => (\n          <Box key={index} my={2} px={3} py={1} bg={'gray.100'} borderRadius=\"md\" boxShadow=\"base\">\n            <HStack>\n              <IconButton icon={<ChevronRightIcon></ChevronRightIcon>} onClick={() => {\n                plyr.current.setCurrentTime(mark.StartTime)\n              }} />\n              <Text>{mark.Value}</Text>\n            </HStack>\n          </Box>\n\n\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Player","/Users/jimi/Play/react/wolf/src/components/Sub.js",["48","49","50","51"],"import { Button } from '@chakra-ui/react'\nimport React, { useEffect, useState, useMemo, useRef } from 'react'\nimport Player from './Player'\n\nfunction Sub({ subtitle }) {\n\n\n  useEffect(() => {\n    setNow(subtitle[0])\n    setLast(subtitle[0])\n    setNext(subtitle[1])\n  }, [])\n  // 当前播放时间\n  const [current, setCurrent] = useState(0)\n  // 当前字幕\n  const [now, setNow] = useState(\"\")\n  //上一个字幕\n  const [last, setLast] = useState(\"\")\n  //下一个字幕\n  const [next, setNext] = useState(\"\")\n\n  const [nextTime, setNextTime] = useState(0)\n\n  const runTime = (time) => {\n    setCurrent(time.toFixed(2))\n  }\n\n  useEffect(() => {\n    let now = subtitle.filter(sub => current >= sub.StartTime && current < sub.EndTime)\n    let last = subtitle.filter(sub => current > sub.EndTime)\n    let next = subtitle.filter(sub => current <= sub.StartTime)\n\n    if (now[0] !== undefined) {\n      setNow(now[0])\n    }\n\n    if (last[last.length - 1] !== undefined) {\n      setLast(last[last.length - 1])\n    }\n\n    if (next[1] !== undefined) {\n      setNext(next[1])\n    }\n\n  }, [current])\n\n  const handleNext = () => {\n    setNextTime(next.StartTime)\n  }\n\n  // 父组件刷新的时候 子组件不刷新\n  const player = useMemo(() => <Player subtitle={subtitle} handleTime={runTime} newTime={nextTime}> </Player>, [])\n  return (\n    <>\n      {player}\n      {\n        now && <h3>now : {now.Value}</h3>\n      }\n      {\n        last && <h3>last : {last.Value}</h3>\n      }\n      {\n        next && <h3>next : {next.Value}</h3>\n      }\n      <Button onClick={handleNext}>Next</Button>\n    </>\n  )\n}\n\nexport default Sub\n",["52","53"],"/Users/jimi/Play/react/wolf/src/components/TopBar.js",["54","55"],"import React from 'react'\nimport { Avatar, Box, Flex, HStack, Link } from \"@chakra-ui/react\"\nimport { Link as ReactLink } from \"react-router-dom\";\n\nconst Links = [\n  {\n    name: \"Dashboard\",\n    link: \"/\"\n  }\n];\n\nconst NavLink = ({ children }) => {\n  return (\n    <Link\n      px={2}\n      py={1}\n      rounded={'md'}\n      _hover={{ textDecoration: 'none', bg: 'gray.400' }}\n\n      href={children.link}>\n      {children.name}\n    </Link>\n  )\n}\n\n\n\nfunction TopBar() {\n\n\n\n  return (\n    <>\n      <Box bg={'gray.300'} px={4} >\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n          <HStack\n            as={'nav'}\n            spacing={4}\n          >\n            <Link as={ReactLink} to=\"/\">\n              <Avatar\n                size={'md'}\n                bg={'gray.100'}\n                _hover={{ bg: 'gray.400' }}\n                src={\n                  '/resource/img/logo.png'\n                }\n              /></Link>\n            {/* {Links.map((link) => (\n              <NavLink key={link.name} display={{ base: 'none', md: 'flex' }}>{link}</NavLink>\n            )\n            )} */}\n          </HStack>\n          <Flex alignItems={'center'}>\n            <h3>Listen What You Want</h3>\n          </Flex>\n        </Flex>\n\n      </Box>\n    </>\n  )\n}\n\nexport default TopBar\n",["56","57"],"/Users/jimi/Play/react/wolf/src/page/Home.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"67","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"68","line":1,"column":38,"nodeType":"64","messageId":"65","endLine":1,"endColumn":44},{"ruleId":"62","severity":1,"message":"69","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"70","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":13},{"ruleId":"62","severity":1,"message":"71","line":4,"column":15,"nodeType":"64","messageId":"65","endLine":4,"endColumn":21},{"ruleId":"62","severity":1,"message":"72","line":4,"column":50,"nodeType":"64","messageId":"65","endLine":4,"endColumn":54},{"ruleId":"62","severity":1,"message":"73","line":4,"column":56,"nodeType":"64","messageId":"65","endLine":4,"endColumn":62},{"ruleId":"62","severity":1,"message":"74","line":2,"column":48,"nodeType":"64","messageId":"65","endLine":2,"endColumn":67},{"ruleId":"75","severity":1,"message":"76","line":49,"column":6,"nodeType":"77","endLine":49,"endColumn":8,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":68,"column":6,"nodeType":"77","endLine":68,"endColumn":15,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"81","line":92,"column":6,"nodeType":"77","endLine":92,"endColumn":8,"suggestions":"82"},{"ruleId":"62","severity":1,"message":"68","line":2,"column":47,"nodeType":"64","messageId":"65","endLine":2,"endColumn":53},{"ruleId":"75","severity":1,"message":"83","line":12,"column":6,"nodeType":"77","endLine":12,"endColumn":8,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"79","line":45,"column":6,"nodeType":"77","endLine":45,"endColumn":15,"suggestions":"85"},{"ruleId":"75","severity":1,"message":"86","line":52,"column":112,"nodeType":"77","endLine":52,"endColumn":114,"suggestions":"87"},{"ruleId":"58","replacedBy":"88"},{"ruleId":"60","replacedBy":"89"},{"ruleId":"62","severity":1,"message":"90","line":5,"column":7,"nodeType":"64","messageId":"65","endLine":5,"endColumn":12},{"ruleId":"62","severity":1,"message":"91","line":12,"column":7,"nodeType":"64","messageId":"65","endLine":12,"endColumn":14},{"ruleId":"58","replacedBy":"92"},{"ruleId":"60","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'axios' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Flex' is defined but never used.","'HStack' is defined but never used.","'useImperativeHandle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filename'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'subtitle'. Either include it or remove the dependency array.",["97"],"React Hook useMemo has a missing dependency: 'filename'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'subtitle'. Either include it or remove the dependency array. If 'setNow' needs the current value of 'subtitle', you can also switch to useReducer instead of useState and read 'subtitle' in the reducer.",["99"],["100"],"React Hook useMemo has missing dependencies: 'nextTime' and 'subtitle'. Either include them or remove the dependency array.",["101"],["94"],["95"],"'Links' is assigned a value but never used.","'NavLink' is assigned a value but never used.",["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"102","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [filename]",{"range":"113","text":"114"},"Update the dependencies array to be: [nowTime, subtitle]",{"range":"115","text":"116"},{"range":"117","text":"114"},"Update the dependencies array to be: [subtitle]",{"range":"118","text":"119"},"Update the dependencies array to be: [current, subtitle]",{"range":"120","text":"121"},"Update the dependencies array to be: [nextTime, subtitle]",{"range":"122","text":"123"},[1285,1287],"[filename]",[1743,1752],"[nowTime, subtitle]",[2167,2169],[271,273],"[subtitle]",[1044,1053],"[current, subtitle]",[1254,1256],"[nextTime, subtitle]"]